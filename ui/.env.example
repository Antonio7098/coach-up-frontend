# AI API base URL (used by Next.js API routes server-side)
AI_API_BASE_URL=http://127.0.0.1:8000

# Optional public override (client-side usage, not strictly needed now)
NEXT_PUBLIC_AI_API_BASE_URL=http://127.0.0.1:8000

# Convex URLs (only needed if you run against a real Convex dev server)
CONVEX_URL=http://127.0.0.1:3210
NEXT_PUBLIC_CONVEX_URL=http://127.0.0.1:3210

# Use in-memory Convex mock for local/E2E by default
# Set to 0 to use a real Convex dev server
MOCK_CONVEX=1

# Playwright-only: skip AI contract-dependent tests (UI summary test will also skip)
# Set to 1 to skip (e.g., UI-only smoke)
SKIP_AI_CONTRACTS=0

# Clerk (custom sign-in-or-up page)
# Required keys (set in .env.local)
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=
CLERK_SECRET_KEY=

# Feature flags
# Enable API route auth gating inside route handlers
CLERK_ENABLED=0
# Protect all routes via middleware (except public matchers)
CLERK_PROTECT_ALL=0
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL=/
NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL=/

# Optional: Only needed if you want to force WASM Lightning CSS for local Next dev
# Playwright already sets this via webServer.env
CSS_TRANSFORMER_WASM=1

# --- SPR-004: Audio Storage / STT / TTS ---
# Audio Storage (S3-compatible)
# Server-only credentials; never expose via NEXT_PUBLIC_*
STORAGE_PROVIDER=s3
S3_BUCKET_AUDIO=
S3_REGION=us-east-1
# For LocalStack/MinIO, set endpoint and force path-style addressing
S3_ENDPOINT_URL=
S3_FORCE_PATH_STYLE=1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# Speech Providers (STT/TTS)
# Select providers and supply credentials accordingly
# STT providers: mock | openai | google | azure | aws | transcribe
# TTS providers: mock | openai | google | azure | elevenlabs | aws | polly
STT_PROVIDER=mock|openai|google|azure|aws|transcribe
TTS_PROVIDER=mock|openai|google|azure|elevenlabs|aws|polly
# When set to 1, API routes accept a body field { "provider": "mock"|"openai"|"google"|"aws" } to override per-request
ALLOW_PROVIDER_OVERRIDE=0

# OpenAI (optional for STT/TTS)
OPENAI_API_KEY=

# Google Cloud (optional for STT and TTS)
# Use Application Default Credentials (ADC). For local dev, set GOOGLE_APPLICATION_CREDENTIALS
# to a JSON key file path. Project can be inferred from the key.
GOOGLE_APPLICATION_CREDENTIALS=
GOOGLE_CLOUD_PROJECT=
# STT language (fallback when request does not include languageHint)
GOOGLE_SPEECH_LANGUAGE=en-US
# TTS language and voice (see voices list in GCP docs)
GOOGLE_TTS_LANGUAGE=en-US
GOOGLE_TTS_VOICE=

# Azure Speech (optional)
AZURE_SPEECH_KEY=
AZURE_SPEECH_REGION=

# AWS Speech (optional)
# Uses the same S3 credentials above for uploading audio.
# Region for AWS services (defaults to S3_REGION if unset)
AWS_REGION=us-east-1
# Optional: single endpoint for LocalStack (affects Polly/Transcribe)
AWS_ENDPOINT_URL=
# Polly voice configuration
AWS_POLLY_ENGINE=standard # or neural
# STT language (fallback when request does not include languageHint)
AWS_TRANSCRIBE_LANGUAGE=en-US

# ElevenLabs (optional for TTS)
ELEVENLABS_API_KEY=
TTS_VOICE_ID=
TTS_FORMAT=audio/mpeg

# Voice Guardrails
VOICE_MAX_UTTERANCE_MS=15000

# STT multipart data URL gating (privacy vs. storage)
# 1 = send base64 data URL directly to provider (no storage)
# 0 = upload to storage and pass objectKey via JSON path
STT_MULTIPART_DATAURL_ENABLED=1

# Client-side timeouts (ms)
NEXT_PUBLIC_STT_TIMEOUT_MS=12000
NEXT_PUBLIC_TTS_TIMEOUT_MS=15000

# Client STT direct-upload (presign -> PUT -> STT JSON) controls
# When enabled, large blobs are uploaded directly to storage and STT is called with objectKey.
# Otherwise, the client uses the multipart base64 path.
# Default: enabled, threshold 524288 bytes (512 KiB)
NEXT_PUBLIC_STT_DIRECT_UPLOAD_ENABLED=1
NEXT_PUBLIC_STT_DIRECT_UPLOAD_THRESHOLD_BYTES=524288